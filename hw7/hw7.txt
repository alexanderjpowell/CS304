// Alexander Powell
// HW 7 - CS 304
// Computer Organization

1)

|---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||
|    VALUE      | C | ///////// ||     LEFT      | D |///| FLAG  ||     RIGHT     | UNIT  | ///// ||     NEXT      | ///////////// ||
|---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||---+---+---+---+---+---+---+---||
0               4                8              12               16              20               24              28               32

Note: the /// marks indicate bytes that are allocated but not used.  

	1) E
	2) A
	3) D

2) The output of the given program is:

5678 1234 a987
44434241 fedc0045
c3d4a1b2 1728e5f6

3)
	Request     Block size (decimal bytes)  Block header (hex)

	malloc(3)     8                          0x9
	malloc(11)   16                          0x11
	malloc(20)   24                          0x19
	malloc(21)   32                          0x21

4)
The following is an implementation of the next_fit search.  

static void *find_fit(size_t asize)
{
    char *oldrover = rover;

    for ( ; GET_SIZE(HDRP(rover)) > 0; rover = NEXT_BLKP(rover))
	if (!GET_ALLOC(HDRP(rover)) && (asize <= GET_SIZE(HDRP(rover))))
	    return rover;

    for (rover = heap_listp; rover < oldrover; rover = NEXT_BLKP(rover))
	if (!GET_ALLOC(HDRP(rover)) && (asize <= GET_SIZE(HDRP(rover))))
	    return rover;

    return NULL;
}

5) See mm.c